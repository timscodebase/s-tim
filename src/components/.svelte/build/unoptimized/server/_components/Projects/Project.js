import './Project.css.proxy.js';
/* src/components/Projects/Project.svelte generated by Svelte v3.31.2 */
import { add_attribute, create_ssr_component, escape } from "../../web_modules/svelte/internal.js";

import cssVars from "../../web_modules/svelte-css-vars.js";
import urlFor from "../../sanityImageUrlBuilder.js";

const css = {
	code: "h3.svelte-h4ukb3.svelte-h4ukb3{color:var(--purple);text-shadow:0px 0px 4px var(--black)}.links.svelte-h4ukb3.svelte-h4ukb3{display:flex;margin-top:1rem;justify-content:space-between}.links.svelte-h4ukb3 a.svelte-h4ukb3{display:inline-block;padding:5px 10px;border-radius:20px;background:var(--purpletoyellow)}.links.svelte-h4ukb3 a.svelte-h4ukb3,.links.svelte-h4ukb3 a.svelte-h4ukb3:hover,.links.svelte-h4ukb3 a.svelte-h4ukb3:visited{color:var(--black)}",
	map: "{\"version\":3,\"file\":\"Project.svelte\",\"sources\":[\"Project.svelte\"],\"sourcesContent\":[\"<script>\\n  import cssVars from 'svelte-css-vars';\\n\\timport urlFor from '../../sanityImageUrlBuilder'\\n  export let project;\\n\\n  const {\\n    description,\\n    link,\\n    gitLink,\\n    image,\\n    title\\n  } = project;\\n  \\n  $: styleVars = {\\n    cssImage: urlFor(image),\\n  };\\n</script>\\n\\n<div class=\\\"project\\\" use:cssVars=\\\"{styleVars}\\\">\\n  <section class=\\\"titles\\\">\\n    <h3>{title}</h3>\\n    <h4>Description</h4>\\n  </section>\\n  <p>{description}</p>\\n  <section class=\\\"footer\\\">\\n    <div class=\\\"links\\\">\\n      <a href={link} target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\\n        Project Link\\n      </a>\\n      <a href={gitLink} target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\\n        GitHub Link\\n      </a>\\n    </div>\\n  </section>\\n</div>\\n\\n<style>\\n  .projects {\\n    flex: 1 1 195px;\\n    padding: 1rem;\\n    background: var(--transtodarkblue);\\n    background-image: var(--cssImage);\\n    background-size: cover;\\n    margin-bottom: 5px;\\n  }\\n\\n  h3 {\\n    color: var(--purple);\\n    text-shadow: 0px 0px 4px var(--black);\\n  }\\n\\n  .links {\\n    display: flex;\\n    margin-top: 1rem;\\n    justify-content: space-between;\\n  }\\n  .links a {\\n    display: inline-block;\\n    padding: 5px 10px;\\n    border-radius: 20px;\\n    background: var(--purpletoyellow);\\n  }\\n  .links a,\\n  .links a:hover,\\n  .links a:visited {\\n    color: var(--black);\\n  }\\n</style>\"],\"names\":[],\"mappings\":\"AA8CE,EAAE,4BAAC,CAAC,AACF,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,WAAW,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,AACvC,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,oBAAM,CAAC,CAAC,cAAC,CAAC,AACR,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,gBAAgB,CAAC,AACnC,CAAC,AACD,oBAAM,CAAC,eAAC,CACR,oBAAM,CAAC,eAAC,MAAM,CACd,oBAAM,CAAC,eAAC,QAAQ,AAAC,CAAC,AAChB,KAAK,CAAE,IAAI,OAAO,CAAC,AACrB,CAAC\"}"
};

const Project = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let styleVars;
	let { project } = $$props;
	const { description, link, gitLink, image, title } = project;
	if ($$props.project === void 0 && $$bindings.project && project !== void 0) $$bindings.project(project);
	$$result.css.add(css);
	styleVars = { cssImage: urlFor(image) };

	return `<div class="${"project"}"><section class="${"titles"}"><h3 class="${"svelte-h4ukb3"}">${escape(title)}</h3>
    <h4>Description</h4></section>
  <p>${escape(description)}</p>
  <section class="${"footer"}"><div class="${"links svelte-h4ukb3"}"><a${add_attribute("href", link, 0)} target="${"_blank"}" rel="${"noopener noreferrer"}" class="${"svelte-h4ukb3"}">Project Link
      </a>
      <a${add_attribute("href", gitLink, 0)} target="${"_blank"}" rel="${"noopener noreferrer"}" class="${"svelte-h4ukb3"}">GitHub Link
      </a></div></section>
</div>`;
});

export default Project;
//# sourceMappingURL=Project.js.map
