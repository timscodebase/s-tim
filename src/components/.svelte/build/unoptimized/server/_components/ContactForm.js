import './ContactForm.css.proxy.js';
/* src/components/ContactForm.svelte generated by Svelte v3.31.2 */
import { create_ssr_component } from "../web_modules/svelte/internal.js";

import { createForm } from "../web_modules/svelte-forms-lib.js";

const css = {
	code: ".form.svelte-59rfn3.svelte-59rfn3{max-width:100vw;display:grid;grid-gap:10px;grid-template-columns:3fr 1fr;margin-bottom:2rem}.label.svelte-59rfn3.svelte-59rfn3{display:flex;justify-content:space-between;color:var(--white)}.padTop.svelte-59rfn3.svelte-59rfn3{padding-top:0.5rem}.form.svelte-59rfn3 input.svelte-59rfn3,.form.svelte-59rfn3 textarea.svelte-59rfn3{width:100%}.submit.svelte-59rfn3.svelte-59rfn3{width:100%;background:var(--yellowtopurple);border:0;outline:0;padding:0.5rem}",
	map: "{\"version\":3,\"file\":\"ContactForm.svelte\",\"sources\":[\"ContactForm.svelte\"],\"sourcesContent\":[\"<script>\\n  import { createForm } from \\\"svelte-forms-lib\\\";\\n\\n  const encode = data =>\\n    Object.keys(data)\\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`)\\n      .join('&')\\n\\n  const { form, handleChange, handleSubmit } = createForm({\\n    initialValues: {\\n      message: \\\"\\\",\\n      name: \\\"\\\",\\n      email: \\\"\\\"\\n    },\\n    onSubmit: values => {\\n      fetch('/', {\\n        method: 'POST',\\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\\n        body: encode({ 'form-name': 'contact', values }),\\n      })\\n        .then(() => alert('Success!'))\\n        .catch(error => alert(error))\\n\\n      e.preventDefault()\\n    }\\n  });\\n</script>\\n\\n<form class=\\\"form\\\" on:submit={handleSubmit}>\\n  <div>\\n    <div>\\n      <label class=\\\"label\\\" for=\\\"name\\\">\\n        <p hidden>Your Name:</p>\\n        <input\\n          class=\\\"input\\\"\\n          type=\\\"text\\\"\\n          name=\\\"name\\\"\\n          placeholder=\\\"Your Name\\\"\\n          on:change={handleChange}\\n        />\\n      </label>\\n    </div>\\n    <div>\\n      <label\\n        class=\\\"padTop label\\\"\\n        for=\\\"email\\\"\\n      >\\n        <p hidden>Your Email:</p>\\n        <input\\n          class=\\\"input\\\"\\n          type=\\\"email\\\"\\n          name=\\\"email\\\"\\n          placeholder=\\\"Your Email\\\"\\n          on:change={handleChange}\\n        />\\n      </label>\\n    </div>\\n    <div>\\n      <label\\n        class=\\\"padTop label\\\"\\n        for=\\\"message\\\"\\n      >\\n        <p hidden>Message:</p>\\n        <textarea\\n          class=\\\"textarea\\\"\\n          name=\\\"message\\\"\\n          placeholder=\\\"Message\\\"\\n          on:change={handleChange}\\n        />\\n      </label>\\n    </div>\\n  </div>\\n  <button class=\\\"submit\\\" type=\\\"submit\\\">\\n    Send\\n  </button>\\n</form>\\n\\n<style>\\n  .form {\\n    max-width: 100vw;\\n    display: grid;\\n    grid-gap: 10px;\\n    grid-template-columns: 3fr 1fr;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .label {\\n    display: flex;\\n    justify-content: space-between;\\n    color: var(--white);\\n  }\\n\\n  .padTop {\\n    padding-top: 0.5rem;\\n  }\\n\\n  .form input,\\n  .form textarea {\\n    width: 100%;\\n  }\\n\\n  .submit {\\n    width: 100%;\\n    background: var(--yellowtopurple);\\n    border: 0;\\n    outline: 0;\\n    padding: 0.5rem;\\n  }\\n</style>\"],\"names\":[],\"mappings\":\"AA8EE,KAAK,4BAAC,CAAC,AACL,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,KAAK,CAAE,IAAI,OAAO,CAAC,AACrB,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,mBAAK,CAAC,mBAAK,CACX,mBAAK,CAAC,QAAQ,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,AACb,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,gBAAgB,CAAC,CACjC,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,MAAM,AACjB,CAAC\"}"
};

const ContactForm = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	const encode = data => Object.keys(data).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`).join("&");

	const { form, handleChange, handleSubmit } = createForm({
		initialValues: { message: "", name: "", email: "" },
		onSubmit: values => {
			fetch("/", {
				method: "POST",
				headers: {
					"Content-Type": "application/x-www-form-urlencoded"
				},
				body: encode({ "form-name": "contact", values })
			}).then(() => alert("Success!")).catch(error => alert(error));

			e.preventDefault();
		}
	});

	$$result.css.add(css);

	return `<form class="${"form svelte-59rfn3"}"><div><div><label class="${"label svelte-59rfn3"}" for="${"name"}"><p hidden>Your Name:</p>
        <input class="${"input svelte-59rfn3"}" type="${"text"}" name="${"name"}" placeholder="${"Your Name"}"></label></div>
    <div><label class="${"padTop label svelte-59rfn3"}" for="${"email"}"><p hidden>Your Email:</p>
        <input class="${"input svelte-59rfn3"}" type="${"email"}" name="${"email"}" placeholder="${"Your Email"}"></label></div>
    <div><label class="${"padTop label svelte-59rfn3"}" for="${"message"}"><p hidden>Message:</p>
        <textarea class="${"textarea svelte-59rfn3"}" name="${"message"}" placeholder="${"Message"}"></textarea></label></div></div>
  <button class="${"submit svelte-59rfn3"}" type="${"submit"}">Send
  </button>
</form>`;
});

export default ContactForm;
//# sourceMappingURL=ContactForm.js.map
