import './Image.css.proxy.js';
/* src/components/Image.svelte generated by Svelte v3.31.2 */
import { add_attribute, create_ssr_component, escape } from "../web_modules/svelte/internal.js";

import "../web_modules/lazysizes.js";

const css = {
	code: ".wrapper.svelte-pobeus{position:relative;overflow:hidden}.aspect-ratio-holder.svelte-pobeus{--pb:100%;padding-bottom:var(--pb)}img.svelte-pobeus{position:absolute;top:0;left:0;width:100%;height:100%}",
	map: "{\"version\":3,\"file\":\"Image.svelte\",\"sources\":[\"Image.svelte\"],\"sourcesContent\":[\"<script>\\n\\timport 'lazysizes'\\n\\n\\texport let aspectRatio\\n\\texport let placeholder\\n\\texport let src\\n\\texport let srcset\\n\\texport let alt\\n\\texport let sizes = 'auto' // 'auto' only works when using `lazysizes`\\n\\n\\tlet padding_bottom_percentage = 100 / aspectRatio + '%'\\n</script>\\n\\n<style>\\n\\t.wrapper {\\n\\t\\tposition: relative;\\n\\t\\toverflow: hidden;\\n\\t}\\n\\n\\t.aspect-ratio-holder {\\n\\t\\t--pb: 100%;\\n\\t\\tpadding-bottom: var(--pb);\\n\\t}\\n\\n\\timg {\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0;\\n\\t\\tleft: 0;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t}\\n</style>\\n\\n<div class=\\\"wrapper\\\">\\n\\t<div class=\\\"aspect-ratio-holder\\\" style=\\\"--pb:{padding_bottom_percentage}\\\" />\\n\\n\\t<img\\n\\t\\tclass=\\\"lazyload\\\"\\n\\t\\t{src}\\n\\t\\tsrcset={placeholder}\\n\\t\\tdata-srcset={srcset}\\n\\t\\t{sizes}\\n\\t\\t{alt}\\n\\t/>\\n\\n\\t<noscript>\\n\\t\\t<img {src} {srcset} {sizes} {alt} />\\n\\t</noscript>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAcC,QAAQ,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,AACjB,CAAC,AAED,oBAAoB,cAAC,CAAC,AACrB,IAAI,CAAE,IAAI,CACV,cAAc,CAAE,IAAI,IAAI,CAAC,AAC1B,CAAC,AAED,GAAG,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC\"}"
};

const Image = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { aspectRatio } = $$props;
	let { placeholder } = $$props;
	let { src } = $$props;
	let { srcset } = $$props;
	let { alt } = $$props;
	let { sizes = "auto" } = $$props; // 'auto' only works when using `lazysizes`
	let padding_bottom_percentage = 100 / aspectRatio + "%";
	if ($$props.aspectRatio === void 0 && $$bindings.aspectRatio && aspectRatio !== void 0) $$bindings.aspectRatio(aspectRatio);
	if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0) $$bindings.placeholder(placeholder);
	if ($$props.src === void 0 && $$bindings.src && src !== void 0) $$bindings.src(src);
	if ($$props.srcset === void 0 && $$bindings.srcset && srcset !== void 0) $$bindings.srcset(srcset);
	if ($$props.alt === void 0 && $$bindings.alt && alt !== void 0) $$bindings.alt(alt);
	if ($$props.sizes === void 0 && $$bindings.sizes && sizes !== void 0) $$bindings.sizes(sizes);
	$$result.css.add(css);

	return `<div class="${"wrapper svelte-pobeus"}"><div class="${"aspect-ratio-holder svelte-pobeus"}" style="${"--pb:" + escape(padding_bottom_percentage)}"></div>

	<img class="${"lazyload svelte-pobeus"}"${add_attribute("src", src, 0)}${add_attribute("srcset", placeholder, 0)}${add_attribute("data-srcset", srcset, 0)}${add_attribute("sizes", sizes, 0)}${add_attribute("alt", alt, 0)}>

	<noscript><img${add_attribute("src", src, 0)}${add_attribute("srcset", srcset, 0)}${add_attribute("sizes", sizes, 0)}${add_attribute("alt", alt, 0)} class="${"svelte-pobeus"}"></noscript></div>`;
});

export default Image;
//# sourceMappingURL=Image.js.map
