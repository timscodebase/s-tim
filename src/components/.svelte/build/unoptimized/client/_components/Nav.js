import './Nav.css.proxy.js';
/* src/components/Nav.svelte generated by Svelte v3.31.2 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_component,
	claim_element,
	claim_space,
	claim_text,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "../web_modules/svelte/internal.js";

import Icon from "./Icon/Icon.js";
import { faBrain } from "../web_modules/@fortawesome/free-solid-svg-icons/faBrain.js";
import { faCameraRetro } from "../web_modules/@fortawesome/free-solid-svg-icons/faCameraRetro.js";
import { faLaptopCode } from "../web_modules/@fortawesome/free-solid-svg-icons/faLaptopCode.js";
import { faTools } from "../web_modules/@fortawesome/free-solid-svg-icons/faTools.js";

import {
	faUserAstronaut
} from "../web_modules/@fortawesome/free-solid-svg-icons/faUserAstronaut.js";

import { faRss } from "../web_modules/@fortawesome/free-solid-svg-icons/faRss.js";

function create_fragment(ctx) {
	let nav;
	let a0;
	let p0;
	let t0;
	let t1;
	let icon0;
	let t2;
	let a1;
	let p1;
	let t3;
	let t4;
	let icon1;
	let t5;
	let a2;
	let p2;
	let t6;
	let t7;
	let icon2;
	let t8;
	let a3;
	let p3;
	let t9;
	let t10;
	let icon3;
	let t11;
	let a4;
	let p4;
	let t12;
	let t13;
	let icon4;
	let t14;
	let a5;
	let p5;
	let t15;
	let t16;
	let icon5;
	let current;
	icon0 = new Icon({ props: { icon: faLaptopCode } });
	icon1 = new Icon({ props: { icon: faTools } });
	icon2 = new Icon({ props: { icon: faBrain } });
	icon3 = new Icon({ props: { icon: faCameraRetro } });
	icon4 = new Icon({ props: { icon: faRss } });
	icon5 = new Icon({ props: { icon: faUserAstronaut } });

	return {
		c() {
			nav = element("nav");
			a0 = element("a");
			p0 = element("p");
			t0 = text("Projects");
			t1 = space();
			create_component(icon0.$$.fragment);
			t2 = space();
			a1 = element("a");
			p1 = element("p");
			t3 = text("Skills");
			t4 = space();
			create_component(icon1.$$.fragment);
			t5 = space();
			a2 = element("a");
			p2 = element("p");
			t6 = text("Education");
			t7 = space();
			create_component(icon2.$$.fragment);
			t8 = space();
			a3 = element("a");
			p3 = element("p");
			t9 = text("Photography");
			t10 = space();
			create_component(icon3.$$.fragment);
			t11 = space();
			a4 = element("a");
			p4 = element("p");
			t12 = text("Blog");
			t13 = space();
			create_component(icon4.$$.fragment);
			t14 = space();
			a5 = element("a");
			p5 = element("p");
			t15 = text("Uses");
			t16 = space();
			create_component(icon5.$$.fragment);
			this.h();
		},
		l(nodes) {
			nav = claim_element(nodes, "NAV", { class: true, role: true });
			var nav_nodes = children(nav);
			a0 = claim_element(nav_nodes, "A", { class: true, href: true });
			var a0_nodes = children(a0);
			p0 = claim_element(a0_nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Projects");
			p0_nodes.forEach(detach);
			t1 = claim_space(a0_nodes);
			claim_component(icon0.$$.fragment, a0_nodes);
			a0_nodes.forEach(detach);
			t2 = claim_space(nav_nodes);
			a1 = claim_element(nav_nodes, "A", { class: true, href: true });
			var a1_nodes = children(a1);
			p1 = claim_element(a1_nodes, "P", {});
			var p1_nodes = children(p1);
			t3 = claim_text(p1_nodes, "Skills");
			p1_nodes.forEach(detach);
			t4 = claim_space(a1_nodes);
			claim_component(icon1.$$.fragment, a1_nodes);
			a1_nodes.forEach(detach);
			t5 = claim_space(nav_nodes);
			a2 = claim_element(nav_nodes, "A", { class: true, href: true });
			var a2_nodes = children(a2);
			p2 = claim_element(a2_nodes, "P", {});
			var p2_nodes = children(p2);
			t6 = claim_text(p2_nodes, "Education");
			p2_nodes.forEach(detach);
			t7 = claim_space(a2_nodes);
			claim_component(icon2.$$.fragment, a2_nodes);
			a2_nodes.forEach(detach);
			t8 = claim_space(nav_nodes);
			a3 = claim_element(nav_nodes, "A", { class: true, href: true });
			var a3_nodes = children(a3);
			p3 = claim_element(a3_nodes, "P", {});
			var p3_nodes = children(p3);
			t9 = claim_text(p3_nodes, "Photography");
			p3_nodes.forEach(detach);
			t10 = claim_space(a3_nodes);
			claim_component(icon3.$$.fragment, a3_nodes);
			a3_nodes.forEach(detach);
			t11 = claim_space(nav_nodes);
			a4 = claim_element(nav_nodes, "A", { class: true, href: true });
			var a4_nodes = children(a4);
			p4 = claim_element(a4_nodes, "P", {});
			var p4_nodes = children(p4);
			t12 = claim_text(p4_nodes, "Blog");
			p4_nodes.forEach(detach);
			t13 = claim_space(a4_nodes);
			claim_component(icon4.$$.fragment, a4_nodes);
			a4_nodes.forEach(detach);
			t14 = claim_space(nav_nodes);
			a5 = claim_element(nav_nodes, "A", { class: true, href: true });
			var a5_nodes = children(a5);
			p5 = claim_element(a5_nodes, "P", {});
			var p5_nodes = children(p5);
			t15 = claim_text(p5_nodes, "Uses");
			p5_nodes.forEach(detach);
			t16 = claim_space(a5_nodes);
			claim_component(icon5.$$.fragment, a5_nodes);
			a5_nodes.forEach(detach);
			nav_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(a0, "class", "link pink svelte-dwtr0x");
			attr(a0, "href", "/projects");
			attr(a1, "class", "link svelte-dwtr0x");
			attr(a1, "href", "/skills");
			attr(a2, "class", "link svelte-dwtr0x");
			attr(a2, "href", "/education");
			attr(a3, "class", "link svelte-dwtr0x");
			attr(a3, "href", "/photography");
			attr(a4, "class", "link svelte-dwtr0x");
			attr(a4, "href", "/blog");
			attr(a5, "class", "link svelte-dwtr0x");
			attr(a5, "href", "/uses");
			attr(nav, "class", "nav svelte-dwtr0x");
			attr(nav, "role", "navigation");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, a0);
			append(a0, p0);
			append(p0, t0);
			append(a0, t1);
			mount_component(icon0, a0, null);
			append(nav, t2);
			append(nav, a1);
			append(a1, p1);
			append(p1, t3);
			append(a1, t4);
			mount_component(icon1, a1, null);
			append(nav, t5);
			append(nav, a2);
			append(a2, p2);
			append(p2, t6);
			append(a2, t7);
			mount_component(icon2, a2, null);
			append(nav, t8);
			append(nav, a3);
			append(a3, p3);
			append(p3, t9);
			append(a3, t10);
			mount_component(icon3, a3, null);
			append(nav, t11);
			append(nav, a4);
			append(a4, p4);
			append(p4, t12);
			append(a4, t13);
			mount_component(icon4, a4, null);
			append(nav, t14);
			append(nav, a5);
			append(a5, p5);
			append(p5, t15);
			append(a5, t16);
			mount_component(icon5, a5, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(icon0.$$.fragment, local);
			transition_in(icon1.$$.fragment, local);
			transition_in(icon2.$$.fragment, local);
			transition_in(icon3.$$.fragment, local);
			transition_in(icon4.$$.fragment, local);
			transition_in(icon5.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(icon0.$$.fragment, local);
			transition_out(icon1.$$.fragment, local);
			transition_out(icon2.$$.fragment, local);
			transition_out(icon3.$$.fragment, local);
			transition_out(icon4.$$.fragment, local);
			transition_out(icon5.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(nav);
			destroy_component(icon0);
			destroy_component(icon1);
			destroy_component(icon2);
			destroy_component(icon3);
			destroy_component(icon4);
			destroy_component(icon5);
		}
	};
}

class Nav extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Nav;
//# sourceMappingURL=Nav.js.map
