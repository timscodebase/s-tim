{"version":3,"names":[],"sources":["Icon.svelte"],"sourcesContent":["<Svg label={label} width={width} height={height} box={box} style={combinedStyle}\n  spin={spin} flip={flip} inverse={inverse} pulse={pulse} class={className}>\n  <slot>\n    {#if self}\n      {#if self.paths}\n        {#each self.paths as path, i}\n        <Path id=\"{i}\" data=\"{path}\"/>\n        {/each}\n      {/if}\n      {#if self.polygons}\n        {#each self.polygons as polygon, i}\n        <Polygon id=\"{i}\" data=\"{polygon}\"/>\n        {/each}\n      {/if}\n      {#if self.raw}\n        <Raw bind:data={self} />\n      {/if}\n    {/if}\n  </slot>\n</Svg>\n\n<script>\n  /* eslint-disable no-unused-vars */\n  import Path from './svg/Path.svelte';\n  import Polygon from './svg/Polygon.svelte';\n  import Raw from './svg/Raw.svelte';\n  import Svg from './svg/Svg.svelte';\n\n  let className = \"\";\n\n  export let data;\n  export let scale = 1;\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n  export let label = null;\n  export let self = null;\n  export let style = null;\n  export { className as class };\n\n  // internal\n  let x = 0;\n  let y = 0;\n  let childrenHeight = 0;\n  let childrenWidth = 0;\n  let outerScale = 1;\n\n  let width;\n  let height;\n  let combinedStyle;\n  let box;\n\n  function init() {\n    if (typeof data === 'undefined') {\n      return;\n    }\n    const normalisedData = normaliseData(data);\n    const [name] = Object.keys(normalisedData);\n    const icon = normalisedData[name];\n    if (!icon.paths) {\n      icon.paths = [];\n    }\n    if (icon.d) {\n      icon.paths.push({\n        d: icon.d,\n      });\n    }\n    if (!icon.polygons) {\n      icon.polygons = [];\n    }\n    if (icon.points) {\n      icon.polygons.push({\n        points: icon.points,\n      });\n    }\n    self = icon;\n  }\n\n  function normaliseData(data) {\n    if ('iconName' in data && 'icon' in data) {\n      let normalisedData = {};\n      let faIcon = data.icon;\n      let name = data.iconName;\n      let width = faIcon[0];\n      let height = faIcon[1];\n      let paths = faIcon[4];\n      let iconData = {\n        width,\n        height,\n        paths: [{\n          d: paths\n        }]\n      }\n      normalisedData[name] = iconData;\n      return normalisedData;\n    }\n    return data;\n  }\n\n  function normalisedScale() {\n    let numScale = 1;\n    if (typeof scale !== 'undefined') {\n      numScale = Number(scale);\n    }\n    if (isNaN(numScale) || numScale <= 0) { // eslint-disable-line no-restricted-globals\n      console.warn('Invalid prop: prop \"scale\" should be a number over 0.'); // eslint-disable-line no-console\n      return outerScale;\n    }\n    return numScale * outerScale;\n  }\n\n  function calculateBox() {\n    if (self) {\n      return `0 0 ${self.width} ${self.height}`;\n    }\n    return `0 0 ${width} ${height}`;\n  }\n\n  function calculateRatio() {\n    if (!self) {\n      return 1;\n    }\n    return Math.max(self.width, self.height) / 16;\n  }\n\n  function calculateWidth() {\n    if (childrenWidth) {\n      return childrenWidth;\n    }\n    if (self) {\n      return (self.width / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n  }\n\n  function calculateHeight() {\n    if (childrenHeight) {\n      return childrenHeight;\n    }\n    if (self) {\n      return (self.height / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n  }\n\n  function calculateStyle() {\n    let combined = \"\";\n    if (style !== null) {\n      combined += style;\n    }\n    let size = normalisedScale();\n    if (size === 1) {\n      return combined;\n    }\n    if (combined !== \"\" && !combined.endsWith(';')) {\n      combined += '; ';\n    }\n    return `${combined}font-size: ${size}em`;\n  }\n\n   $: {\n    data; // this is needed to keep data up-to-date\n    style;\n    scale;\n    init();\n    width = calculateWidth();\n    height = calculateHeight();\n    combinedStyle = calculateStyle();\n    box = calculateBox();\n  }\n</script>\n"],"mappings":"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"}